name: Hetzner Deploy on PR

on:
  pull_request:
    branches: [ master ]
    types: [opened, synchronize, reopened]
    paths-ignore:
      - 'cidi/**'
  push:
    branches: 
      - feature/*
      - bugfix/*
    paths-ignore:
      - 'cidi/**'

jobs:
  build-and-deploy:
    if: "!startsWith(github.head_ref, 'cidi/')"
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c
      with:
        python-version: '3.x'  # Use the Python version required for your Ansible setup

    - name: Install Ansible
      run: pip install ansible

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@69c00852f1304c321337f45a105731218c2d5544

    - name: Terraform Initialize
      run: terraform init
      env:
        HCLOUD_TOKEN: ${{ secrets.HCLOUD_TOKEN }}


    - name: Terraform validate
      run: terraform validate
      env:
        TF_LOG: DEBUG


    - name: Terraform plan
      run: terraform plan
      env: 
        TF_LOG: DEBUG

    - name: Terraform Apply
      run: terraform apply -auto-approve
      env:
        TF_VAR_hcloud_token: ${{ secrets.HCLOUD_TOKEN }}
        TF_VAR_ansible_ssh_public_key: ${{ secrets.ANSIBLE_SSH_PUBLIC_KEY }}
        TF_LOG: DEBUG


    - name: Retrieve IP Address
      id: get-ip
      run: echo "::set-output name=VM_IP::$(terraform output -raw ip)"

    - name: Add SSH Key to Known Hosts
      run: ssh-keyscan -H ${{ steps.get-ip.outputs.VM_IP }} >> ~/.ssh/known_hosts


    - name: Run Ansible Playbook
      run: ansible-playbook -i '${{ steps.get-ip.outputs.VM_IP }},' cors-anywhere-playbook.yml --private-key ${{ secrets.ANSIBLE_PRIVATE_KEY }}
      env:
        ANSIBLE_PRIVATE_KEY_FILE: ${{ secrets.ANSIBLE_SSH_PRIVATE_KEY }}
